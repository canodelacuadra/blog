{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "Blog de desarrollo web",
  "language": "es",
  "home_page_url": "https://canodelacuadra.github.io/blog/",
  "feed_url": "https://canodelacuadra.github.io/blog/feed/feed.json",
  "description": "Mi jardín digital .",
  "author": {
    "name": "José Antonio Cano",
    "url": "canodelacuadra.github.io"
  },
  "items": [{
      "id": "https://canodelacuadra.github.io/blog/posts/aviso-cookies/",
      "url": "https://canodelacuadra.github.io/blog/posts/aviso-cookies/",
      "title": "GDPR Cookie Notice",
      "content_html": "<p>Es posible tener sitios web que no utilicen cookies, pero a veces alguna  funcionalidad  incorpora cookies (emergentes, llamadas a la acción, analítica).</p>\n<p>Hasta no hace mucho el aviso de cookies se limitaba a informar de que el sitio web usaba cookies, informando de qué tipo de cookies usabas y su propósito. Y aquí se cumplía lo de «hecha la ley, hecha la trampa». Un inocente aviso de cookies podía servir para cargar infinidad de cookies de terceros. Para aclararnos. Estás en el año 2021 y en cuestión de cookies necesitas:</p>\n<ol>\n<li>Informar de qué  cookies usas, el tipo de cookies y su propósito.</li>\n<li>Diferenciar su propósito.</li>\n<li>Dar opción al visitante de seleccionar las cookies que acepta y las que no (esta es la novedad)</li>\n<li>Evitar consentimientos tácitos o generados por defecto (si tú, no hagas trampas).</li>\n</ol>\n<p>Si usas cookies de terceros, necesitas a partir de estos requerimientos necesitas implementar un código que te permita solucionar los puntos C y D. En el mundo WordPress existen multitud de plugins que gestionan estas cuestiones. Quizás muchos sufran de problemas de personalización o como ya ha pasado de seguridad y mantenimiento. Existen <a href=\"https://www.osano.com/cookieconsent\">servicios externos especializados</a> en cookies o lo que es casi mejor, soluciones listas para personalizar con un poco de código.</p>\n<p>La ventaja de personalizar un código genérico es que suele darnos más opciones de personalización, nos permite ajustar la carga diferida y realizar a veces también traducciones. En este caso el ejemplo parte de una utilidad llamada <a href=\"https://github.com/passatgt/gdpr-cookie-notice\">GDPR Cookie Notice</a>. Se trata de una sencilla solución basada en JavaScript que permite mostrar un aviso de cookies en nuestro sitio, cumpliendo con los requerimientos de la ley europea.</p>\n<h2 id=\"pasos-para-configurar-el-aviso-de-cookies-con-gdpr-cookie-notice\" tabindex=\"-1\">Pasos para configurar el aviso de cookies con GDPR Cookie Notice <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/aviso-cookies/#pasos-para-configurar-el-aviso-de-cookies-con-gdpr-cookie-notice\" aria-hidden=\"true\">#</a></h2>\n<p>Como podrás comprobar esta misma web utiliza este código con alguna personalización adicional. Lo que necesitamos es cargar diferentes elementos:</p>\n<ul>\n<li>El propio código JavaScript que gestiona el mensaje (script.js, antes de la etiqueta final body )</li>\n<li>Una hoja de estilo con el CSS (style.css, en la cabecera antes del final del head)</li>\n<li>Un archivo JS con las traducciones (es.js, en mi caso español, después de script.js antes de la etiqueta final body )</li>\n<li>Finalmente cargar al final de la etiqueta body, un script con la llamada a la función gdprCookieNotice, pasando como argumento un objeto de opciones (ver en la documentación las opciones disponibles).\nA continuación dejo una estructura básica de cómo quedarían los archivos:</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">doctype</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>es<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span><br />  <span class=\"token comment\">&lt;!-- CSS con estilos de GDPR Cookie Notice --></span><br />  <span class=\"token comment\">&lt;!-- https://github.com/passatgt/gdpr-cookie-notice --></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/assets/gdpr/style.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br />  <br />  <span class=\"token comment\">&lt;!-- JS para cargar selectivamente Google Analytics según las preferencias del visitante --></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br />  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gdprCookiesEnabled'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br />        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">.</span>analytics<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <br />          <br />          <span class=\"token keyword\">var</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />          script<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">\"https://www.googletagmanager.com/gtag/js?id=UA-XXXX-X\"</span><span class=\"token punctuation\">;</span><br />\t  script<span class=\"token punctuation\">.</span>async <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br />          document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />          <br />          window<span class=\"token punctuation\">.</span>dataLayer <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>dataLayer <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br />          <span class=\"token keyword\">function</span> <span class=\"token function\">gtag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>dataLayer<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><br />          <span class=\"token function\">gtag</span><span class=\"token punctuation\">(</span><span class=\"token string\">'js'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />          <span class=\"token function\">gtag</span><span class=\"token punctuation\">(</span><span class=\"token string\">'config'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UA-XXX-X'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <br />        <span class=\"token punctuation\">}</span><br />  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br />  <br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Aquí tu fantástico contenido<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br />  <br />  <span class=\"token comment\">&lt;!-- Script principal de GDPR Cookie Notice --></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/assets/gdpr/script.js?ver=5.7<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>gdpr-js-js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br />  <br />  <span class=\"token comment\">&lt;!-- Script con las traducciones al español --></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/assets/gdpr/lang/es.js?ver=5.7<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>gdpr-lang-js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br />  <br />  <span class=\"token comment\">&lt;!-- Llamada y opciones para el GDPR Cookie Notice --></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br />  <span class=\"token function\">gdprCookieNotice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br />\t\t  <span class=\"token literal-property property\">locale</span><span class=\"token operator\">:</span> <span class=\"token string\">'es'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// si lo cambias debes tener un archivo como el de arriba es.js</span><br />\t\t  <span class=\"token literal-property property\">timeout</span><span class=\"token operator\">:</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// tiempo de espera</span><br />\t\t  <span class=\"token literal-property property\">expiration</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// días de duración de la cookie</span><br />\t\t  <span class=\"token literal-property property\">domain</span><span class=\"token operator\">:</span> window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hostname<span class=\"token punctuation\">,</span> <span class=\"token comment\">// dominio</span><br />\t\t  <span class=\"token literal-property property\">implicit</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// debe se false, porque de lo contrario no cumples</span><br />\t\t  <span class=\"token literal-property property\">statement</span><span class=\"token operator\">:</span> <span class=\"token string\">'/condiciones'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// url a la política de cookies / legal</span><br />\t\t  <span class=\"token literal-property property\">analytics</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ga'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// aquí el grupo analitica pero hay más en opciones</span><br />  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br />  <br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Hay cosas interesantes en el código. Vayamos por líneas:</p>\n<ul>\n<li>Línea 9. Detección y carga selectiva de las cookies de analítica con Google Analytics. Es una adaptación necesaria para cumplir con la legislación. Si el visitante rechaza las cookies de analíticas, no carga ese código gracias al condicional (e.detail.analytics). Es importante ver las opciones que nos ofrece el código para agrupar por cookies de marketing, rendimiento o analítica. La cuestión es agrupar por finalidad y así que el usuario escoja. Por supuesto esto sirve para casos de sitios pequeños o medianos. Los grandes necesitarán configuraciones más avanzadas como las que ofrece Osano</li>\n<li>Línea 33. Aquí se carga las traducciones. Es fácil porque sólo tienes que copiar el original y traducir las cadenas al idiomas. El nombre este archivo debe coincidir con la etiqueta html lang.</li>\n<li>Línea 37. La llamada principal a la configuración personalizada del sitio web. Como se puede ver, aquí es bastante sencilla y se limita a diferenciar las cookies propias (la del propio aviso) y las de analítica. Con tiempos de caducidad, idioma, retardo en aparecer, dominio…etc.</li>\n</ul>\n<p>Si has visitado el sitio web te habrás hecho una idea del funcioamento. Aparece un mensaje en la parte inferior donde hay un texto, un botón y un enlace a la configuración. El usuario puede aceptar y cargar la cookie de aviso, o puede optar por cargar también la de analítica web. Cumplimos por tanto con los requisitos de la legislación de cookies. Evitamos el consentimiento expreso permitiendo la selección de las cookies según propósito.</p>\n<p>Por último le puedes dar un poco de estilo modificando el archivo style.css que cargas de la GDPR Cookie Notice, con los colores que más se ajustan al diseño.</p>\n",
      "date_published": "2022-07-26T00:00:00Z"
    },{
      "id": "https://canodelacuadra.github.io/blog/posts/yaml/",
      "url": "https://canodelacuadra.github.io/blog/posts/yaml/",
      "title": "YAML",
      "content_html": "<p>YAML es un formato de serialización de datos legible por humanos inspirado en lenguajes como XML, C, Python, Perl, así como en el formato de los correos electrónicos (RFC 2822). YAML fue propuesto por Clark Evans en 2001, quien lo diseñó junto a Ingy döt Net y Oren Ben-Kiki.</p>\n<p>YAML es un acrónimo recursivo que significa <strong>Y</strong>AML <strong>A</strong>in't <strong>M</strong>arkup <strong>L</strong>anguage (en castellano, ‘YAML no es un lenguaje de marcado’).​ A comienzos de su desarrollo, YAML significaba Yet Another Markup Language (‘otro lenguaje de marcado más’) para distinguir su propósito centrado en los datos en lugar del marcado de documentos. Sin embargo, dado que se usa frecuentemente XML para serializar datos y XML es un auténtico lenguaje de marcado de documentos, es razonable considerar YAML como un lenguaje de marcado ligero.</p>\n<h2 id=\"caracteristicas\" tabindex=\"-1\">Características <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/yaml/#caracteristicas\" aria-hidden=\"true\">#</a></h2>\n<p>YAML fue creado bajo la creencia de que todos los datos pueden ser representados adecuadamente como combinaciones de listas, hashes (mapeos) y datos escalares (valores simples).</p>\n<p>La sintaxis es relativamente sencilla y fue diseñada teniendo en cuenta que fuera muy legible pero que a la vez fuese fácilmente mapeable a los tipos de datos más comunes en la mayoría de los lenguajes de alto nivel. Además, YAML utiliza una notación basada en la sangría y/o un conjunto de caracteres  distintos de los que se usan en XML, haciendo que sea fácil componer ambos lenguajes.</p>\n<ul>\n<li>Los contenidos en YAML se describen utilizando el conjunto de caracteres imprimibles de Unicode, bien en UTF-8 o UTF-16.</li>\n<li>La estructura del documento se denota indentando con espacios en blanco; sin embargo no se permite el uso de caracteres de tabulación para sangrar.</li>\n<li>Los miembros de las listas se denotan encabezados por un guion ( - ) con un miembro por cada línea, o bien entre corchetes ( [   ] ) y separados por coma espacio ( ,   ).</li>\n<li>Los vectores asociativos se representan usando los dos puntos seguidos por un espacio. en la forma &quot;clave: valor&quot;, bien uno por línea o entre llaves ( {   } ) y separados por coma seguida de espacio ( ,   ).</li>\n<li>Un valor de un vector asociativo viene precedido por un signo de interrogación ( ? ), lo que permite que se construyan claves complejas sin ambigüedad.</li>\n<li>Los valores sencillos (o escalares) por lo general aparecen sin entrecomillar, pero pueden incluirse entre comillas dobles ( &quot; ), o comillas simples ( ' ).</li>\n<li>En las comillas dobles, los caracteres especiales se pueden representar con secuencias de escape similares a las del lenguaje de programación C, que comienzan con una barra invertida ( \\ ).</li>\n<li>Se pueden incluir múltiples documentos dentro de un único flujo, separándolos por tres guiones ( --- ); los tres puntos ( ... ) indican el fin de un documento dentro de un flujo.</li>\n<li>Los nodos repetidos se pueden denotar con un ampersand ( &amp; ) y ser referidos posteriormente usando el asterisco ( * )</li>\n<li>Los comentarios vienen encabezados por la almohadilla ( # ) y continúan hasta el final de la línea.</li>\n<li>Los nodos pueden etiquetarse con un tipo o etiqueta utilizando el signo de exclamación( ! ) seguido de una cadena que puede ser expandida en una URL.</li>\n<li>Los documentos YAML pueden ser precedidos por directivas compuestas por un signo de porcentaje ( % ) seguidos de un nombre y parámetros delimitados por espacios.. Hay definidas dos directivas en YAML 1.1:\n<ul>\n<li>La directiva %YAML se utiliza para identificar la versión de YAML en un documento dado.</li>\n<li>La directiva %TAG se utiliza como atajo para los prefijos de URIs. Estos atajos pueden ser usados en las etiquetas de tipos de nodos.</li>\n</ul>\n</li>\n<li>YAML requiere que las comas y puntos y comas que se utilicen como separadores en las listas sean seguidos por un espacio, de forma que los valores escalares que contengan signos de puntuación (como 5,280 o <a href=\"http://www.wikipedia.org/\">http://www.wikipedia.org</a>) se puedan representar sin necesidad de utilizar comillas.</li>\n</ul>\n<p>Hay dos caracteres adicionales que están reservados en YAML para su posible estandarización en un futuro: la arroba ( @ ) y el acento grave ( ` ).</p>\n<h2 id=\"ejemplos\" tabindex=\"-1\">Ejemplos <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/yaml/#ejemplos\" aria-hidden=\"true\">#</a></h2>\n<h3 id=\"listas\" tabindex=\"-1\">Listas <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/yaml/#listas\" aria-hidden=\"true\">#</a></h3>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"> <span class=\"token punctuation\">---</span> <span class=\"token comment\"># Películas favoritas, formato de bloque</span><br /> <span class=\"token punctuation\">-</span> BotijoAzul<br /> <span class=\"token punctuation\">-</span> BotijoVerde<br /> <span class=\"token punctuation\">-</span> Viridiana<br /> <span class=\"token punctuation\">-</span> Psicosis<br /> <span class=\"token punctuation\">...</span><br /><br /> <span class=\"token punctuation\">---</span> <span class=\"token comment\"># Lista de la compra, formato en línea</span><br /> <span class=\"token punctuation\">[</span>leche<span class=\"token punctuation\">,</span> pan<span class=\"token punctuation\">,</span> huevos<span class=\"token punctuation\">]</span><br /> <span class=\"token punctuation\">[</span>chorizo<span class=\"token punctuation\">,</span> morcilla<span class=\"token punctuation\">,</span> botijo<span class=\"token punctuation\">,</span> pollo<span class=\"token punctuation\">]</span></code></pre>\n<h3 id=\"vectores-asociativos\" tabindex=\"-1\">Vectores asociativos <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/yaml/#vectores-asociativos\" aria-hidden=\"true\">#</a></h3>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"> <span class=\"token punctuation\">---</span> <span class=\"token comment\"># Bloque</span><br /> <span class=\"token key atrule\">nombre</span><span class=\"token punctuation\">:</span> Pepe López<br /> <span class=\"token key atrule\">edad</span><span class=\"token punctuation\">:</span> <span class=\"token number\">33</span><br /> <span class=\"token punctuation\">---</span> <span class=\"token comment\"># En  línea</span><br /> <span class=\"token punctuation\">{</span><span class=\"token key atrule\">nombre</span><span class=\"token punctuation\">:</span> Pepe López<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">edad</span><span class=\"token punctuation\">:</span> <span class=\"token number\">33</span><span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"literales-de-bloque\" tabindex=\"-1\">Literales de bloque <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/yaml/#literales-de-bloque\" aria-hidden=\"true\">#</a></h3>\n<p>Preservando retornos de línea</p>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"><br /> El texto mantiene su estructura,<br /> en el sentido que preserva los retornos de línea.</span><br /> <br /> Esto incluye también líneas en blanco.</code></pre>\n<p>Ignorando retornos de línea</p>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span> <span class=\"token punctuation\">></span><span class=\"token scalar string\"><br /> El texto rodeado <br /> será formateado <br /> como un único<br /> párrafo</span></code></pre>\n<p>Las líneas en blanco\ndenotan saltos de párrafo.</p>\n<h3 id=\"listas-de-vectores-asociativos\" tabindex=\"-1\">Listas de vectores asociativos <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/yaml/#listas-de-vectores-asociativos\" aria-hidden=\"true\">#</a></h3>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token punctuation\">{</span><span class=\"token key atrule\">nombre</span><span class=\"token punctuation\">:</span> Pepe López<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">edad</span><span class=\"token punctuation\">:</span> <span class=\"token number\">33</span><span class=\"token punctuation\">}</span><br /><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">nombre</span><span class=\"token punctuation\">:</span> Maria Garcia</code></pre>\n<h3 id=\"vectores-asociativos-de-listas\" tabindex=\"-1\">Vectores asociativos de listas <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/yaml/#vectores-asociativos-de-listas\" aria-hidden=\"true\">#</a></h3>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">hombres</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Pepe Lopez<span class=\"token punctuation\">,</span> Guillermo Garcia<span class=\"token punctuation\">]</span><br /><span class=\"token key atrule\">mujeres</span><span class=\"token punctuation\">:</span><br /> <span class=\"token punctuation\">-</span> María García<br /> <span class=\"token punctuation\">-</span> Susana Márquez</code></pre>\n",
      "date_published": "2022-07-24T00:00:00Z"
    },{
      "id": "https://canodelacuadra.github.io/blog/posts/template-engine/",
      "url": "https://canodelacuadra.github.io/blog/posts/template-engine/",
      "title": "template engine",
      "content_html": "<p>Los motores de plantillas se utilizan cuando desea crear rápidamente aplicaciones web que se dividen en diferentes componentes. Las plantillas también permiten una representación rápida de los datos del lado del servidor que deben pasarse a la aplicación.</p>\n<p>Por ejemplo, es posible que desee tener componentes como el cuerpo, la navegación, el pie de página, el tablero, etc.</p>\n<h2 id=\"motores-de-plantillas-populares\" tabindex=\"-1\">Motores de plantillas populares <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/template-engine/#motores-de-plantillas-populares\" aria-hidden=\"true\">#</a></h2>\n<p>Los motores de plantillas se utilizan principalmente para aplicaciones del lado del servidor que se ejecutan en un solo servidor y no se crean como API. Los más populares  Handlebars (para JavaScript), Twig y Blade (para Laravel / PHP), JSP (para Java) o Ninja (de python).</p>\n<h2 id=\"como-funcionan-los-motores-de-plantillas\" tabindex=\"-1\">Cómo funcionan los motores de plantillas <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/template-engine/#como-funcionan-los-motores-de-plantillas\" aria-hidden=\"true\">#</a></h2>\n<p>Cuando crea una aplicación del lado del servidor con un motor de plantillas, el motor de plantillas reemplaza las variables en un archivo de plantilla con valores reales y muestra este valor al cliente. Esto facilita la construcción rápida de nuestra aplicación.</p>\n<h3 id=\"ejemplo-con-un-motor-expressjs-de-plantillas-ejs\" tabindex=\"-1\">Ejemplo con un motor expressJS de plantillas ejs <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/template-engine/#ejemplo-con-un-motor-expressjs-de-plantillas-ejs\" aria-hidden=\"true\">#</a></h3>\n<p>Para una aplicación del lado del servidor escrita con el tiempo de ejecución de NodeJS, puede usar un motor de plantilla.</p>\n<p>Los siguientes pasos demuestran cómo funcionan los motores de plantillas utilizando express Js y el motor de plantillas ejs. El ejemplo que se proporciona a continuación representa los datos de un usuario en la página web.</p>\n<h4 id=\"paso-1-instalacion-express-y-el-motor-de-plantillas-ejs\" tabindex=\"-1\">Paso 1: Instalación express y el motor de plantillas ejs <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/template-engine/#paso-1-instalacion-express-y-el-motor-de-plantillas-ejs\" aria-hidden=\"true\">#</a></h4>\n<p>El siguiente comando instala el ejsmotor de plantilla y el expressmarco:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> express ejs</code></pre>\n<h4 id=\"paso-2-configuracion-del-motor-de-visualizacion\" tabindex=\"-1\">Paso 2: Configuración del motor de visualización <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/template-engine/#paso-2-configuracion-del-motor-de-visualizacion\" aria-hidden=\"true\">#</a></h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"express\"</span><span class=\"token punctuation\">)</span><br /><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br /><br /><br /><span class=\"token comment\">// Set the View Engine or Template Engine</span><br />app<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'view engine'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ejs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br /><br />app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span></code></pre>\n<p>En el código anterior, creamos nuestra aplicación express. La aplicación escucha en el puerto 3000.</p>\n<p>Esta línea de código: app.set('view engine', 'ejs')le dice a nuestra aplicación express que queremos usar EJS como nuestro motor de plantillas.</p>\n<h4 id=\"paso-3-configuracion-de-la-carpeta-de-visualizacion\" tabindex=\"-1\">Paso 3: Configuración de la carpeta de visualización <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/template-engine/#paso-3-configuracion-de-la-carpeta-de-visualizacion\" aria-hidden=\"true\">#</a></h4>\n<p>Cree una carpeta llamada &quot;view&quot;. La carpeta de vista debe contener nuestras plantillas. Una de estas plantillas es index.ejs, que generará nuestra portada. La segunda plantilla es user.ejs, que se usará para pasar datos de usuario desde el lado del servidor para que se muestren inmediatamente en la página web.</p>\n<pre><code>index.js\n&gt;view\n   index.ejs\n   user.ejs\n</code></pre>\n<h4 id=\"paso-4-configuracion-de-las-rutas\" tabindex=\"-1\">Paso 4: Configuración de las rutas <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/template-engine/#paso-4-configuracion-de-las-rutas\" aria-hidden=\"true\">#</a></h4>\n<p>Vamos a crear las rutas para nuestra página de inicio y página de usuario.</p>\n<p>Tenga en cuenta el res.render()método a continuación. Así es como renderizas una plantilla en expressJS.</p>\n<pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br />  res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"index\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br /> <br />app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/user\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span>res</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><br />  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br />    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Theodore Kelechukwu O.\"</span><span class=\"token punctuation\">,</span><br />    <span class=\"token literal-property property\">stack</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MERN\"</span><span class=\"token punctuation\">,</span><br />    <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> <span class=\"token string\">\"theodoreonyejiaku@gmail.com\"</span><span class=\"token punctuation\">,</span><br />    <span class=\"token literal-property property\">hubby</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"singing\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"playing guitar\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"reading\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"philosoph\"</span><span class=\"token punctuation\">]</span></code></pre>\n<p>Como hemos visto, la ruta predeterminada “\\”, cuando se accede, muestra o renderiza la index.ejspágina. Mientras tanto, el “\\usuario” muestra la user.ejspágina.</p>\n<p>Pasamos el userobjeto al objeto renderizado para pasar las userpropiedades a la página web y renderizarla.</p>\n<h4 id=\"paso-5-plantillas-de-nuestros-archivos-de-vista\" tabindex=\"-1\">Paso 5: Plantillas de nuestros archivos de vista <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/template-engine/#paso-5-plantillas-de-nuestros-archivos-de-vista\" aria-hidden=\"true\">#</a></h4>\n<p>Ahora que hemos pasado los datos de usuario desde el lado del servidor, debemos mostrarlos de inmediato en nuestra interfaz o página web.</p>\n<p>index.ejs</p>\n<p>usuario.ejs</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span><br />    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>This is the title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><br /><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><br />    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Welcome to User Details<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><br />    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>b</span><span class=\"token punctuation\">></span></span>Name:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>b</span><span class=\"token punctuation\">></span></span> &lt;%= user.name %><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br />    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>b</span><span class=\"token punctuation\">></span></span>Email:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>b</span><span class=\"token punctuation\">></span></span> &lt;%= user.email %><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br />    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>b</span><span class=\"token punctuation\">></span></span>Stack:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>b</span><span class=\"token punctuation\">></span></span> &lt;%= user.stack %><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Tenga en cuenta el &lt;%= variable %&gt;patrón de visualización de valores. Esa es la forma en que se usa en ejs. Observe también el user.forEach(); esto es para mostrar cuán poderosos pueden ser los motores de plantillas.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><br /><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>template engine<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><br /><br /><br /><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><br />  <br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><br /></code></pre>\n",
      "date_published": "2022-07-24T00:00:00Z"
    },{
      "id": "https://canodelacuadra.github.io/blog/posts/core-web-vitals/",
      "url": "https://canodelacuadra.github.io/blog/posts/core-web-vitals/",
      "title": "Core web vitals",
      "content_html": "<h2 id=\"core-web-vitals\" tabindex=\"-1\">Core Web Vitals <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/core-web-vitals/#core-web-vitals\" aria-hidden=\"true\">#</a></h2>\n<p>Core Web Vitals como iniciativa de Google, nace de la necesidad de proporcionar un método unificado a los desarrolladores y webmasters, que les permitiera detectar de forma sencilla problemas de UX y WPO en una web.</p>\n<p>En este sentido, Google ha señalado tres indicadores que considera esenciales para brindar una buena experiencia de usuario. Estas tres métricas, están enfocadas en</p>\n<ol>\n<li>medir el tiempo que tarda en cargar una web, LCP</li>\n<li>la rapidez de interacción con el usuario</li>\n<li>y la estabilidad visual de la misma</li>\n</ol>\n<h3 id=\"largest-contentful-paint-lcp\" tabindex=\"-1\">Largest Contentful Paint (LCP) <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/core-web-vitals/#largest-contentful-paint-lcp\" aria-hidden=\"true\">#</a></h3>\n<p>La métrica Largest Contentful Paint, mide el tiempo que tarda en renderizarse en pantalla (above the fold) el contenido más grande.</p>\n<p>Indica el momento en el que el usuario ve algo relevante en pantalla (sin hacer scroll)\nEl tiempo de respuesta del servidor está incluido en la medición\nEl LCP puede corresponder a una imagen, texto o video\nlargest contentful paint umbrales</p>\n<p>Para ofrecer una buena experiencia de usuario, el LCP debe ocurrir a los 2,5 segundos o menos. Hasta los 4 segundos, Google considera que el resultado se puede mejorar y por encima de este umbral, lo considera lento.</p>\n<h3 id=\"first-input-delay-fid\" tabindex=\"-1\">First Input Delay (FID) <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/core-web-vitals/#first-input-delay-fid\" aria-hidden=\"true\">#</a></h3>\n<p>La métrica First Input Delay, mide el tiempo que transcurre desde la primera interacción del usuario, hasta que el navegador responde a la misma.</p>\n<p>Para ofrecer una buena experiencia de usuario, el FID debe ocurrir en 100 milisegundos o menos. Hasta los 300 milisegundos, Google considera que el resultando se puede mejorar y por encima de este umbral, lo considera lento.</p>\n<p>first input delay umbrales</p>\n<p>Revela información de la primera impresión del usuario al hacer clic en la web\nLa métrica se verá alterada dependiendo del momento, navegador y elemento clicado por el usuario\nEsta métrica no es posible simularla en laboratorio. Únicamente se puede medir sobre usuarios reales\nEl tiempo de bloqueo total (TBT) es una métrica de laboratorio para hacer pruebas sin ninguna interacción directa del usuario. También es recomendable tener en cuenta el tiempo de interacción (TTI). Estas dos métricas, pueden ayudar a realizar estimaciones sobre la percepción del usuario en diferentes tipos de red y dispositivo</p>\n<h3 id=\"cumulative-layout-shift-cls\" tabindex=\"-1\">Cumulative Layout Shift (CLS) <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/core-web-vitals/#cumulative-layout-shift-cls\" aria-hidden=\"true\">#</a></h3>\n<p>La métrica Cumulative Layout Shift, es la responsable de evaluar la estabilidad visual de una web.</p>\n<p>A menor desplazamiento de elementos durante la carga, menor será la probabilidad de que el usuario haga clic por error en alguno de ellos\nLa medición de los elementos de la página, se realiza a través de ventanas de sesión. Las ventanas de sesión, corresponden a diferentes partes de una página web a las que llega un usuario cuando hace scroll. La puntuación total para cada ventana de sesión, se denomina cambio de diseño acumulativo (CLS)\nEl CLS no mide tiempo, sino que realiza un cálculo de cambios en las posiciones\ncumulative layout shift umbrales</p>\n<p>Para ofrecer una buena experiencia de usuario, el CLS debe ser menor o igual a 0,1. Hasta 0,25 Google considera que el resultando se puede mejorar y por encima de este umbral, lo considera pobre.</p>\n<h2 id=\"web-vitals\" tabindex=\"-1\">Web vitals <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/core-web-vitals/#web-vitals\" aria-hidden=\"true\">#</a></h2>\n<p>Web Vitals son señales de calidad clave para ofrecer una excelente UX en la web (<a href=\"https://web.dev/vitals\">https://web.dev/vitals</a>). Esta extensión mide Core Web Vitals y brinda retroalimentación instantánea sobre las métricas de carga, interactividad y cambio de diseño. Es consistente con la forma en que Chrome mide estas métricas y las informa a otras herramientas de Google (p. ej., Informe de experiencia de usuario de Chrome, Información sobre la velocidad de la página, Consola de búsqueda).</p>\n<p>La extensión captura:\nPintura con contenido más grande\nCambio de diseño acumulativo\nRetraso de la primera entrada\nInteracción con la siguiente pintura (experimental)</p>\n<p>La extensión proporciona tres características principales:</p>\n<ol>\n<li>Ambient Badge: esto ayuda a verificar si una página supera los umbrales de Core Web Vitals.</li>\n</ol>\n<p>Una vez instalada, la extensión mostrará un ícono de insignia de estado deshabilitado hasta que navegue a una URL. En este punto, actualizará la insignia a verde o rojo dependiendo de si la URL supera los umbrales de métricas de Core Web Vitals.</p>\n<p>La insignia tiene varios estados:</p>\n<ul>\n<li>Deshabilitado - gris</li>\n<li>Pasando - verde</li>\n<li>Una o más métricas fallan - rojo</li>\n</ul>\n<p>Si una o más métricas fallan, la insignia animará los valores de estas métricas.</p>\n<ol start=\"2\">\n<li>Desglose detallado en la ventana emergente</li>\n</ol>\n<p>Al hacer clic en el ícono de la insignia Ambient, podrá profundizar en los valores de métricas individuales. En este modo, la extensión también dirá si un valor de métrica puede cambiar o requiere una acción del usuario.</p>\n<p>Por ejemplo, First Input Delay requiere una interacción real (por ejemplo, hacer clic/tocar) con la página y estará en un estado de espera de entrada hasta que este sea el caso. Recomendamos consultar la documentación de web.dev para LCP, CLS y FID para comprender cuándo se asientan los valores de las métricas.</p>\n<p>A partir de la versión 1.0.0, la ventana emergente combina sus experiencias locales de Core Web Vitals con datos de usuarios reales del campo a través de la API Chrome UX Report (CrUX). Esta integración le brinda información contextual para ayudarlo a comprender qué tan similares son sus experiencias individuales a las de otros usuarios de escritorio en la misma página. También hemos agregado una nueva opción para &quot;Comparar experiencias locales con datos de campo del teléfono&quot;, si es necesario. Tenga en cuenta que es posible que los datos de CrUX no estén disponibles para algunas páginas, en cuyo caso intentamos cargar datos de campo para el origen en su conjunto.</p>\n<ol start=\"3\">\n<li>Superposición de HUD</li>\n</ol>\n<p>La superposición muestra una pantalla de visualización frontal (HUD) que se superpone a su página. Es útil si necesita una vista persistente de sus métricas de Core Web Vitals durante el desarrollo. Para habilitar la superposición:</p>\n<p>Haga clic con el botón derecho en la insignia de Ambient y vaya a Opciones.\nVerifique Mostrar superposición de HUD y haga clic en 'Guardar'\nVuelva a cargar la pestaña de la URL que desea probar. La superposición ahora debería estar presente.</p>\n",
      "date_published": "2022-07-24T00:00:00Z"
    },{
      "id": "https://canodelacuadra.github.io/blog/posts/crear-proyecto-eleventy/",
      "url": "https://canodelacuadra.github.io/blog/posts/crear-proyecto-eleventy/",
      "title": "Crear proyecto web con eleventy",
      "content_html": "<ol>\n<li>Crea una carpeta para el proyecto\nPara crear un nuevo proyecto de Eleventy, solo necesita crear una carpeta vacía:</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> eleventy-01<br />$ <span class=\"token builtin class-name\">cd</span> eleventy-01</code></pre>\n<ol start=\"2\">\n<li>Crear un archivo package.json\nDentro de esta carpeta de proyecto recién creada, debes crear un archivo inicial para json: package.json, de modo que puedas usar la herramienta de Node.js Package Manager (npm) posteriormente, para la administración de las dependencias:</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> init -y</code></pre>\n<ol start=\"3\">\n<li>Instalación de Eleventy\nHabiendo creado el archivo package.json a continuación debemos agregar el paquete de Eleventy ( @11ty/eleventy ) como una dependencia de desarrollo, dentro de nuestro proyecto, usando el comando npm install:</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev @11ty/eleventy</code></pre>\n<ol start=\"4\">\n<li>Ejecutando Eleventy\nAhora solamente debes probar que Eleventy ya esta instalado. Ejecuta el comando, y la consola te mostrará una respuesta del número de ficheros creados y el tiempo que ha tardado en ello.</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ npx @11/eleventy</code></pre>\n<p>Como aún no se han creado archivos adicional a la carpeta del proyecto, el resultado debería ser de 0 archivos.\n6.  También puedes iniciar Eleventy en modo de recarga en caliente, utilizando la opción –serve:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ npx @11/eleventy --serve</code></pre>\n<p>En este caso, el comando sigue ejecutándose y está atento a cualquier cambio de archivo de los archivos dentro de la plantilla y dentro de la carpeta del proyecto actual. Si el contenido de un archivo se cambia y luego se guarda, Elevanty reconoce ese cambio automáticamente y genera un nuevo archivo de salida.</p>\n<ol start=\"7\">\n<li>Adición de plantillas\nAhora es el momento de ver realmente a Eleventy en acción y eso requiere que agreguemos archivos de plantilla a nuestro proyecto. En primer lugar, estamos creando un archivo de plantilla especial, una plantilla de diseño. Al utilizar una plantilla de diseño, puedes ajustar el contenido con un diseño común. Para crear dicha plantilla, primero agregamos una nueva carpeta denominada _includes al proyecto:</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> _includes</code></pre>\n<p>Luego, dentro de esta nueva carpeta _includes, creamos un nuevo archivo vacío con el nombre de mylayout.njk e insertamos el siguiente código de plantilla:</p>\n<pre class=\"language-html\"><code class=\"language-html\">---<br />site_title: Mi Primer Sitio de Eleventy<br />---<br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span> NaN<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><br /> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span><span class=\"token punctuation\">/></span></span> <br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span><span class=\"token punctuation\">/></span></span> <br /> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>small</span><span class=\"token punctuation\">></span></span>by<br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://ciberninjas.com<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Ciberninjas.com<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>small</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Al usar la extensión de archivo njk, estamos indicando que estamos usando el lenguaje de plantillas Nunjucks dentro de este archivo. Si quieres saber más sobre Nunjucks puedes encontrar el sitio web del proyecto y la documentación correspondiente en Mozilla Nunjucks.</p>\n<p>El código comienza con una sección preliminar al principio. Dentro de la sección de contenido inicial, puede definir datos que luego se pueden usar en el siguiente código de plantilla. En el ejemplo, estamos usando la sección principal para definir la propiedad site_title que contiene una cadena para el valor del título.</p>\n<p>Dentro del código de la plantilla, accedemos a site_title utilizando llaves dobles. El valor de esta propiedad se utiliza para establecer el título de la página.</p>\n<ol start=\"8\">\n<li>Creación de plantillas utilizando un diseño\nAhora creemos dos plantillas más (usando Markdown como el lenguaje de la plantilla) usando nuestra plantilla de diseño creada previamente: Cree un nuevo archivo <a href=\"http://post-01.md/\">post-01.md</a> en la carpeta del proyecto e inserte el siguiente código de Markdown:</li>\n</ol>\n<pre class=\"language-html\"><code class=\"language-html\">---<br />layout: mylayout.njk<br />title: Mi primer post del blog.<br />---<br />Crear proyecto web con eleventy<br /><br /><br /> <br />This is my first blog post! Have much fun using Eleventy, an easy and flexible JavaScript-based static site generator.</code></pre>\n<p>Estas plantillas, generan una publicación simple sobre un blog, que aún no posee ningun tipo de CSS ni estilo decorativo incluido.</p>\n",
      "date_published": "2018-09-30T00:00:00Z"
    },{
      "id": "https://canodelacuadra.github.io/blog/posts/eleventy/",
      "url": "https://canodelacuadra.github.io/blog/posts/eleventy/",
      "title": "Eleventy.",
      "content_html": "<p>Para algunas personas los generadores de sitios estáticos son la forma natural de crear un sitio web. La idea principal es la simplicidad y la escasez de mantenimiento. Si tienes un sitio web que va a cambiar poco o va a seguir una estructura muy básica en su contenido, son una solución ideal. Admitamos que muchos sitios web son carne de estático:</p>\n<ul>\n<li>catálogos,</li>\n<li>web corporativas,</li>\n<li>páginas de aterrizaje</li>\n<li>o incluso blogs.</li>\n</ul>\n<p>Los CMS permiten aislar a los usuarios de las dificultades del código, pero también aportan su propia capa de complejidad y dependencias. No son una novedad, pero los generadores estáticos vuelven a molar 🆒 gracias a la integración de las brillantes herramientas de desarrollo web para el front-end y los servicios de despliegue de código.</p>\n<h2 id=\"eleventy-es-un-generador-de-sitios-web-estaticos-basado-en-javascript\" tabindex=\"-1\">Eleventy es un generador de sitios web estáticos basado en JavaScript <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/eleventy/#eleventy-es-un-generador-de-sitios-web-estaticos-basado-en-javascript\" aria-hidden=\"true\">#</a></h2>\n<p>El caso es que hay muchos generadores estáticos , así que muchas personas buscan un terreno conocido según su lenguaje favorito. Jekyll, basado en Ruby, ha sido la herramienta más conocida, pero otros como Hugo (en Go), han sido el referente más habitual entre los que buscaban mayor rendimiento.</p>\n<p>El imparable crecimiento de JavaScript de los últimos años, ha provocado también una explosión de generadores estáticos y completos frameworks para crear sitios web. Por su elegante simplicidad, quizás uno de los que destaca entre muchos es Eleventy (11ty). Creado por Zach Leatherman este ingenioso generador estático basado en JavaScript, es un gran ejemplo de que las cosas bien pensadas suelen ser las más sencillas.</p>\n<p>Eleventy quiere que tengas siempre la sensación de control. No pretende complicarte la vida, pero si te la quieres complicar, ahí tienes la herramienta para extenderla como tú quieras (hay un modo debug que muestra paso a paso lo que ejecuta) Si quieres algo extremadamente sencillo, en pocas líneas lo tienes. Todo es progresivo y depende de tu proyecto. Vas añadiendo complejidad, según tu propio criterio. Si tu configuración de Eleventy se vuelve demasiado compleja, no culpes a la herramienta, porque es solo tu responsabilidad.</p>\n<h2 id=\"script-inicial-para-instalar-y-ejecutar-eleventy\" tabindex=\"-1\">Script inicial para instalar y ejecutar Eleventy <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/eleventy/#script-inicial-para-instalar-y-ejecutar-eleventy\" aria-hidden=\"true\">#</a></h2>\n<p>Sí, empezar con Eleventy es así de sencillo.\n¿Pero qué tiene Eleventy para ser más que un generador estático?</p>\n<p>En última instancia el objetivo de un generador estático es producir un código HTML listo para subir a un alojamiento web. Vieja escuela ¿verdad? La realidad es que un generador estático como Eleventy puede hacer, si tú quieres, muchas cosas para que ese proceso sea más óptimo. A continuación comentaré lo que me parece más destacable de Eleventy para que sea mi elección como generador estático. No quiero que esto sea un tutorial, porque los hay muy buenos y además la documentación oficial, aunque impone un poco, es bastante buena. Prefiero centrarme en destacar sus puntos más destacables en mi opinión:</p>\n<h2 id=\"en-cuestion-de-plantillas-eleventy-lo-entiende-casi-todo\" tabindex=\"-1\">En cuestión de plantillas, Eleventy lo entiende casi todo. <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/eleventy/#en-cuestion-de-plantillas-eleventy-lo-entiende-casi-todo\" aria-hidden=\"true\">#</a></h2>\n<p>Si tienes experiencia con algún lenguaje de plantillas va a ser complicado que no esté entre la lista de lenguajes, que Eleventy traduce a HTML. Sí, Eleventy viene de 11 plantillas (no caí en eso hasta tiempo después 🤯). Tus plantillas pueden estar escritas o mezclar hasta 11 tipos: HTML, Markdown, JavaScript, Liquid, Nunjucks, Handlebars, Mustache, EJS, Haml, Pug, o hasta plantillas literales de JavaScript. ¿Es necesario tanto soporte? En la práctica es normal que te termines por usar una o dos, pero el hecho de que puedas mezclar con total libertad esos lenguajes de plantillas, es una gran oportunidad para facilitar la migración de otros proyectos (por ejemplo si vienes de Jekyll con Liquid).</p>\n<h2 id=\"lo-configuras-como-te-de-la-gana\" tabindex=\"-1\">Lo configuras como te de la gana. <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/eleventy/#lo-configuras-como-te-de-la-gana\" aria-hidden=\"true\">#</a></h2>\n<p>Eleventy te deja absoluta libertad para configurar desde cero lo que necesites. En la práctica es más común partir de un «starter» que te ofrezca cierta configuración o hacerte tú, tus propias configuraciones. Hay un archivo de configuración clave .eleventy.js que se encarga de gestionar tu propia personalización, y luego todo es cuestión de organizar tus carpetas (si quieres, hay una forma por defecto) del proyecto. Eleventy es una herramienta en JavaScript y se gestiona vía npm, así que en tu archivo package.json es donde organizarás tus scripts (los starters y ejemplos ayudan) y las diferentes dependencias (si quieres librerías de CSS por ejemplo). En la documentación encuentras las diferentes opciones para configurar tu proyecto (directorios a copiar en producción, urls). Dejo un ejemplo de mi .eleventy.js (basado en este proyecto) en un sitio web reciente:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> htmlmin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"html-minifier\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br /><br />module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">eleventyConfig</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><br />  <br />   eleventyConfig<span class=\"token punctuation\">.</span><span class=\"token function\">setUseGitIgnore</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />    <br />   eleventyConfig<span class=\"token punctuation\">.</span><span class=\"token function\">addWatchTarget</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./_tmp/style.css\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />  <br />   eleventyConfig<span class=\"token punctuation\">.</span><span class=\"token function\">addPassthroughCopy</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"./_tmp/style.css\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./style.css\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />    <br />   eleventyConfig<span class=\"token punctuation\">.</span><span class=\"token function\">addPassthroughCopy</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"images\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />    <br />   eleventyConfig<span class=\"token punctuation\">.</span><span class=\"token function\">addShortcode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"version\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br />      <span class=\"token keyword\">return</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />  <br />   eleventyConfig<span class=\"token punctuation\">.</span><span class=\"token function\">addShortcode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"year\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><br />     <span class=\"token keyword\">return</span>  <span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br /><br />   eleventyConfig<span class=\"token punctuation\">.</span><span class=\"token function\">addTransform</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"htmlmin\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">content<span class=\"token punctuation\">,</span> outputPath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br />       <br />     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><br />          process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">ELEVENTY_PRODUCTION</span> <span class=\"token operator\">&amp;&amp;</span><br />          outputPath <span class=\"token operator\">&amp;&amp;</span><br />          outputPath<span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".html\"</span><span class=\"token punctuation\">)</span><br />       <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br />          <span class=\"token keyword\">let</span> minified <span class=\"token operator\">=</span> htmlmin<span class=\"token punctuation\">.</span><span class=\"token function\">minify</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />            <span class=\"token literal-property property\">useShortDoctype</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br />            <span class=\"token literal-property property\">removeComments</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br />            <span class=\"token literal-property property\">collapseWhitespace</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br />        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />          <span class=\"token keyword\">return</span> minified<span class=\"token punctuation\">;</span><br />        <span class=\"token punctuation\">}</span><br />    <br />        <span class=\"token keyword\">return</span> content<span class=\"token punctuation\">;</span><br />    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br /><br />    <br />    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br />        <span class=\"token literal-property property\">dir</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br />            <span class=\"token literal-property property\">input</span><span class=\"token operator\">:</span> <span class=\"token string\">\"src\"</span><span class=\"token punctuation\">,</span><br />            <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token string\">\"public\"</span><br />        <span class=\"token punctuation\">}</span><br />    <span class=\"token punctuation\">}</span><br /><br /><span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"una-cascada-de-datos-completisima\" tabindex=\"-1\">Una cascada de datos completísima. <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/eleventy/#una-cascada-de-datos-completisima\" aria-hidden=\"true\">#</a></h2>\n<p>Al igual que con las extensiones de plantillas, un aspecto sobresaliente de Eleventy es su espectacular forma de gestionar los datos. Puedes añadir datos a los plantillas, literalmente de casi todas partes. En local, a través de archivos de configuración global, archivos .json o hasta la posibilidad de que incorporar datos dinámicos según llamadas a través de API. Todo esto supone una cascada de datos para ser fusionada en tiempo de ejecución. Pero no hace falta complicarse demasiado, ya que tus datos pueden ser tan obvios como texto en la cabecera de la plantilla. Volvemos a la sencillez inicial y a la progresividad en ofrecer alternativas. No obstante, la cascada de datos puede volverse algo difícil de manejar. Personalmente no he tenido experiencia en resolver casos complejos y es posible que sea uno de los campos con mejoras en el futuro.</p>\n<h2 id=\"configuracion-adicional-con-shortcodes-y-transformaciones\" tabindex=\"-1\">Configuración adicional con shortcodes y transformaciones <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/eleventy/#configuracion-adicional-con-shortcodes-y-transformaciones\" aria-hidden=\"true\">#</a></h2>\n<p>Como verás en el archivo .eleventy.js de arriba, otro aspecto que puedes configurar es la posibilidad de añadir «shortcodes» que te faciliten incorporar contenido dinámico en tu plantilla (fechas o extractos dinámicos basados en variables). Las transformaciones permiten, al igual que un gestor de tareas, incorporar a tu flujo de trabajo transformaciones del código como minificar el HTML, que optimizan la entrega de tu contenido y consiguen más velocidad en la carga de la página. También es posible agregar tus propios filtros personalizados según el lenguaje de plantilla que uses. Como digo la documentación es bastante completa y todo depende de tus necesidades.</p>\n<h2 id=\"orientado-al-rendimiento-y-a-la-velocidad\" tabindex=\"-1\">Orientado al rendimiento y a la velocidad. <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/eleventy/#orientado-al-rendimiento-y-a-la-velocidad\" aria-hidden=\"true\">#</a></h2>\n<p>Aunque muchos generadores tienen como objetivo simplificar la entrega de contenido, es innegable que el enfoque de Eleventy está muy orientado a crear sitios absurdamente rápidos. Si estás preocupado por la velocidad y desempeño de tu sitio web, Eleventy ofrece unas configuraciones y extensiones orientadas crear sitios web con valores de Core Web Vitals y Lighthouse casi imposibles de conseguir con otras herramientas.</p>\n<h2 id=\"una-gran-comunidad-y-con-muchos-complementos-adicionales\" tabindex=\"-1\">Una gran comunidad y con muchos complementos adicionales. <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/eleventy/#una-gran-comunidad-y-con-muchos-complementos-adicionales\" aria-hidden=\"true\">#</a></h2>\n<p>Como en otros proyectos, un gran activo de Eleventy consiste en una entusiasta comunidad activa que pone a disposición plugins y extensiones que ayudan a solucionar diferentes necesidades. Existen plugins oficiales que ayudan a gestionar imágenes, caché y otros usos necesarios para cuando necesitas máximo desempeño. La comunidad ofrece recursos y también ideas ingeniosas de conseguir soluciones a cuestiones que un generador estático convencional no se plantearía. Además, como comentaba anteriormente los sitios web reaizados con Eleventy ofrecen unos valores altísimos en velocidad.</p>\n<p>Creo que Eleventy ofrece una excelente solución a la necesidad de crear sitios web sencillos, pero con toda la configuración avanzada que exige un sitio web moderno.</p>\n<h2 id=\"conclusion-sobre-eleventy\" tabindex=\"-1\">Conclusión sobre Eleventy <a class=\"direct-link\" href=\"https://canodelacuadra.github.io/blog/posts/eleventy/#conclusion-sobre-eleventy\" aria-hidden=\"true\">#</a></h2>\n<p>En lo personal sólo he empezado a trastear con Eleventy y tengo que admitir que la experiencia es fantástica, aunque no exenta de cierta dificultad para comprender la herramienta (en especial, si no has usado otros generadores estáticos anteriormente). Hay muy buenos recursos y la comunidad está produciendo soluciones increíbles. Creo que Eleventy ofrece una excelente solución a la necesidad de crear sitios web sencillos, pero con toda la configuración avanzada que exige un sitio web moderno. Si eres desarrollador no vas a echar nada en falta para realizar tus proyectos. Otro punto positivo que le encuentro es que, a pesar de su enfoque en JavaScript, es una herramienta ideal para el aprendizaje de tecnologías web. Conforme aprendes cosas las vas incorporando al proyecto y todo es muy artesano, lo que favorece que tengas la sensación de control sobre lo que haces. No necesitas librerías si no quieres. Con Markdown y algo de CSS, puedes crear tu primer sitio y a partir de ahí, complicarte lo que quieras. En definitiva, Eleventy es una herramienta ideal para generar sitios web de forma moderna pero con un enfoque artesanal y muy progresivo.</p>\n",
      "date_published": "2018-08-24T00:00:00Z"
    },{
      "id": "https://canodelacuadra.github.io/blog/posts/nunjucks/",
      "url": "https://canodelacuadra.github.io/blog/posts/nunjucks/",
      "title": "Nunjucks",
      "content_html": "<p>Aunque podemos usar cualquier extensión de archivo que desee para sus archivos de plantilla de Nunjucks, la comunidad de Nunjucks ha adoptado .njk.</p>\n<p>Nunjucks es un poderoso motor de plantillas asincrónico que ha sido inspirado en jinja2. Es rápido y ligero de modo que optimiza el rendimiento de las plantillas en los navegadores web. Puede extenderse de manera sencilla aplicando filtros personalizados o implementando extensiones.</p>\n<p>Es usado por grandes empresas como la Corporación Mozilla, que lo emplea en Firefox Marketplace y Mozilla Webmaker.</p>\n",
      "date_published": "2018-07-04T00:00:00Z"
    }
  ]
}
